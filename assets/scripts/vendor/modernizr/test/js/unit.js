QUnit.begin=function(){console.log("Starting test suite"),console.log("================================================\n")},QUnit.moduleDone=function(opts){console.log(0===opts.failed?"✔ All tests passed in '"+opts.name+"' module":"✖ "+opts.failed+" tests failed in '"+opts.name+"' module")},QUnit.done=function(opts){console.log("\n================================================"),console.log("Tests completed in "+opts.runtime+" milliseconds"),console.log(opts.passed+" tests of "+opts.total+" passed, "+opts.failed+" failed.")},module("Basics",{setup:function(){},teardown:function(){}}),test("globals set up",function(){ok(window.Modernizr,"global modernizr object created")}),test("bind is implemented",function(){function F(x,y){result=this+" -> x:"+x+", y:"+y}ok(Function.prototype.bind,"bind is a member of Function.prototype");var a=function(){return this.modernizr};a=a.bind({modernizr:"just awsome"}),equal("just awsome",a(),"bind works as expected");var result;G=F.bind("'a'","'b'"),H=G.bind("'Cannot rebind this!'","'c'"),G(1,2),equal(result,"'a' -> x:'b', y:1"),H(1,2),equal(result,"'a' -> x:'b', y:'c'");var f=new F(1,2);equal(result,"[object Object] -> x:1, y:2");var g=new G(1,2);equal(result,"[object Object] -> x:'b', y:1");var h=new H(1,2);equal(result,"[object Object] -> x:'b', y:'c'"),ok(f instanceof F,"f instanceof F"),ok(g instanceof F,"g instanceof F"),ok(h instanceof F,"h instanceof F"),ok("prototype"in F,'"prototype" in F'),raises(function(){Function.bind.call(void 0)});var abcAt=String.prototype.charAt.bind("abc");equal(abcAt(1),"b","Objects that allow call but not construct can be bound..."),equal(1,Function.bind.length,"it exists")}),test("document.documentElement is valid and correct",1,function(){equal(document.documentElement,document.getElementsByTagName("html")[0])}),test("no-js class is gone.",function(){ok(!/(?:^|\s)no-js(?:^|\s)/.test(document.documentElement.className),"no-js class is gone"),ok(/(?:^|\s)js(?:^|\s)/.test(document.documentElement.className),"html.js class is present"),ok(/(?:^|\s)\+no-js(?:\s|$)/.test(document.documentElement.className),"html.+no-js class is still present"),ok(/(?:^|\s)no-js-(?:\s|$)/.test(document.documentElement.className),"html.no-js- class is still present"),ok(/(?:^|\s)i-has-no-js(?:\s|$)/.test(document.documentElement.className),"html.i-has-no-js class is still present"),document.querySelector&&ok(document.querySelector("html.js")==document.documentElement,"document.querySelector('html.js') matches.")}),test("html shim worked",function(){expect(2);var elem=document.getElementsByTagName("section")[0];elem.id="html5section",ok(1===elem.childNodes.length,"unknown elements dont collapse"),elem.style.color="red",ok(/red|#ff0000/i.test(elem.style.color),"unknown elements are styleable")}),module("Modernizr classes and bools",{setup:function(){},teardown:function(){}}),test("html classes are looking good",function(){for(var classes=TEST.trim(document.documentElement.className).split(/\s+/),modprops=Object.keys(Modernizr),newprops=modprops,i=-1,len=TEST.privates.length;++i<len;){var item=TEST.privates[i];equal(-1,TEST.inArray(item,classes),"private Modernizr object "+item+"should not have matching classes"),equal(-1,TEST.inArray("no-"+item,classes),"private Modernizr object no-"+item+" should not have matching classes")}$.each(TEST.deprecated,function(){newprops.splice(TEST.inArray(item,newprops),1)}),classes.length!==newprops;for(var aclass,i=0,len=classes.length;len>i;i++)aclass=classes[i],/^(?:js|\+no-js|no-js-|i-has-no-js)$/.test(aclass)||(0===aclass.indexOf("no-")?(aclass=aclass.replace("no-",""),equal(Modernizr[aclass],!1,aclass+" is correctly false in the classes and object")):equal(Modernizr[aclass],!0,aclass+" is correctly true in the classes and object"));for(var aclass,i=0,len=classes.length;len>i;i++)equal(classes[i],classes[i].toLowerCase(),"all classes are lowerCase.");var docElClass=document.documentElement.className;$.each(["\\+no-js","no-js-","i-has-no-js"],function(i,fakeClass){docElClass=docElClass.replace(new RegExp("(^|\\s)"+fakeClass+"(\\s|$)","g"),"$1$2")}),equal(/[^\s]no-/.test(docElClass),!1,"whitespace between all classes.")}),test("Modernizr properties are looking good",function(){var nobool=TEST.API.concat(TEST.inputs).concat(TEST.audvid).concat(TEST.privates).concat(["textarea"]);for(var prop in window.Modernizr)if(Modernizr.hasOwnProperty(prop)){if(TEST.inArray(prop,nobool)>=0)continue;ok(Modernizr[prop]===!0||Modernizr[prop]===!1,"Modernizr."+prop+" is a straight up boolean"),equal(prop,prop.toLowerCase(),"all properties are lowerCase.")}}),test("Modernizr.audio and Modernizr.video",function(){for(var i=-1,len=TEST.audvid.length;++i<len;){var prop=TEST.audvid[i];"true"==Modernizr[prop].toString()?(ok(Modernizr[prop],"Modernizr."+prop+" is truthy."),equal(1==Modernizr[prop],!0,"Modernizr."+prop+" is == true"),equal("object"==typeof Modernizr[prop],!0,"Moderizr."+prop+" is truly an object"),equal(Modernizr[prop]!==!0,!0,"Modernizr."+prop+" is !== true")):equal(1!=Modernizr[prop],!0,"Modernizr."+prop+" is != true")}}),test("Modernizr results match expected values",function(){equal(!!document.createElement("canvas").getContext,Modernizr.canvas,"canvas test consistent"),equal(!!window.Worker,Modernizr.webworkers,"web workers test consistent")}),module("Modernizr's API methods",{setup:function(){},teardown:function(){}}),test("Modernizr.addTest()",22,function(){var docEl=document.documentElement;Modernizr.addTest("testtrue",function(){return!0}),Modernizr.addTest("testtruthy",function(){return 100}),Modernizr.addTest("testfalse",function(){return!1}),Modernizr.addTest("testfalsy",function(){return void 0}),ok(docEl.className.indexOf(" testtrue")>=0,"positive class added"),equal(Modernizr.testtrue,!0,"positive prop added"),ok(docEl.className.indexOf(" testtruthy")>=0,"positive class added"),equal(Modernizr.testtruthy,100,"truthy value is not casted to straight boolean"),ok(docEl.className.indexOf(" no-testfalse")>=0,"negative class added"),equal(Modernizr.testfalse,!1,"negative prop added"),ok(docEl.className.indexOf(" no-testfalsy")>=0,"negative class added"),equal(Modernizr.testfalsy,void 0,"falsy value is not casted to straight boolean"),Modernizr.addTest("testcamelCase",function(){return!0}),ok(-1===docEl.className.indexOf(" testcamelCase"),"camelCase test name toLowerCase()'d"),Modernizr.addTest("testboolfalse",!1),ok(~docEl.className.indexOf(" no-testboolfalse"),"Modernizr.addTest(feature, bool): negative class added"),equal(Modernizr.testboolfalse,!1,"Modernizr.addTest(feature, bool): negative prop added"),Modernizr.addTest("testbooltrue",!0),ok(~docEl.className.indexOf(" testbooltrue"),"Modernizr.addTest(feature, bool): positive class added"),equal(Modernizr.testbooltrue,!0,"Modernizr.addTest(feature, bool): positive prop added"),Modernizr.addTest({testobjboolfalse:!1,testobjbooltrue:!0}),ok(~docEl.className.indexOf(" no-testobjboolfalse"),"Modernizr.addTest({feature: bool}): negative class added"),equal(Modernizr.testobjboolfalse,!1,"Modernizr.addTest({feature: bool}): negative prop added"),ok(~docEl.className.indexOf(" testobjbooltrue"),"Modernizr.addTest({feature: bool}): positive class added"),equal(Modernizr.testobjbooltrue,!0,"Modernizr.addTest({feature: bool}): positive prop added"),Modernizr.addTest({testobjfnfalse:function(){return!1},testobjfntrue:function(){return!0}}),ok(~docEl.className.indexOf(" no-testobjfnfalse"),"Modernizr.addTest({feature: bool}): negative class added"),equal(Modernizr.testobjfnfalse,!1,"Modernizr.addTest({feature: bool}): negative prop added"),ok(~docEl.className.indexOf(" testobjfntrue"),"Modernizr.addTest({feature: bool}): positive class added"),equal(Modernizr.testobjfntrue,!0,"Modernizr.addTest({feature: bool}): positive prop added"),Modernizr.addTest("testchainone",!0).addTest({testchaintwo:!0}).addTest("testchainthree",function(){return!0}),ok(Modernizr.testchainone==Modernizr.testchaintwo==Modernizr.testchainthree,"addTest is chainable")}),test("Modernizr.mq: media query testing",function(){var $html=$("html");$.mobile={},$.mobile.media=function(){var cache={},testDiv=$("<div id='jquery-mediatest'>"),fakeBody=$("<body>").append(testDiv);return function(query){if(!(query in cache)){var styleBlock=document.createElement("style"),cssrule="@media "+query+" { #jquery-mediatest { position:absolute; } }";styleBlock.type="text/css",styleBlock.styleSheet?styleBlock.styleSheet.cssText=cssrule:styleBlock.appendChild(document.createTextNode(cssrule)),$html.prepend(fakeBody).prepend(styleBlock),cache[query]="absolute"===testDiv.css("position"),fakeBody.add(styleBlock).remove()}return cache[query]}}(),ok(Modernizr.mq,"Modernizr.mq() doesn' freak out."),equal($.mobile.media("only screen"),Modernizr.mq("only screen"),"screen media query matches jQuery mobile's result"),equal(Modernizr.mq("only all"),Modernizr.mq("only all"),"Cache hit matches")}),test("Modernizr.hasEvent()",function(){ok("function"==typeof Modernizr.hasEvent,"Modernizr.hasEvent() is a function"),equal(Modernizr.hasEvent("click"),!0,"click event is supported"),equal(Modernizr.hasEvent("modernizrcustomevent"),!1,"random event is definitely not supported")}),test("Modernizr.testStyles()",function(){equal(typeof Modernizr.testStyles,"function","Modernizr.testStyles() is a function");var style="#modernizr{ width: 9px; height: 4px; font-size: 0; color: papayawhip; }";Modernizr.testStyles(style,function(elem,rule){equal(style,rule,"rule passsed back matches what i gave it."),equal(elem.offsetWidth,9,"width was set through the style"),equal(elem.offsetHeight,4,"height was set through the style"),equal(elem.id,"modernizr","element is indeed the modernizr element")})}),test("Modernizr._[properties]",function(){equal(6,Modernizr._prefixes.length,"Modernizr._prefixes has 6 items"),equal(4,Modernizr._domPrefixes.length,"Modernizr.domPrefixes has 4 items")}),test("Modernizr.testProp()",function(){equal(!0,Modernizr.testProp("margin"),"Everyone supports margin"),equal(!1,Modernizr.testProp("happiness"),"Nobody supports the happiness style. :("),equal(!0,Modernizr.testProp("fontSize"),"Everyone supports fontSize"),equal(!1,Modernizr.testProp("font-size"),"Nobody supports font-size"),equal("pointerEvents"in document.createElement("div").style,Modernizr.testProp("pointerEvents"),"results for `pointer-events` are consistent with a homegrown feature test")}),test("Modernizr.testAllProps()",function(){equal(!0,Modernizr.testAllProps("margin"),"Everyone supports margin"),equal(!1,Modernizr.testAllProps("happiness"),"Nobody supports the happiness style. :("),equal(!0,Modernizr.testAllProps("fontSize"),"Everyone supports fontSize"),equal(!1,Modernizr.testAllProps("font-size"),"Nobody supports font-size"),equal(Modernizr.csstransitions,Modernizr.testAllProps("transition"),"Modernizr result matches API result: csstransitions"),equal(Modernizr.csscolumns,Modernizr.testAllProps("columnCount"),"Modernizr result matches API result: csscolumns")}),test("Modernizr.prefixed() - css and DOM resolving",function(){function gimmePrefix(prop,obj){var prefixes=["Moz","Khtml","Webkit","O","ms"],domPrefixes=["moz","khtml","webkit","o","ms"],elem=document.createElement("div"),upper=prop.charAt(0).toUpperCase()+prop.slice(1);if(obj){if(prop in obj)return prop;for(var len=domPrefixes.length;len--;)if(domPrefixes[len]+upper in obj)return domPrefixes[len]+upper}else{if(prop in elem.style)return prop;for(var len=prefixes.length;len--;)if(prefixes[len]+upper in elem.style)return prefixes[len]+upper}return!1}for(var propArr=["transition","backgroundSize","boxSizing","borderImage","borderRadius","boxShadow","columnCount"],domPropArr=[{prop:"requestAnimationFrame",obj:window},{prop:"querySelectorAll",obj:document},{prop:"matchesSelector",obj:document.createElement("div")}],i=-1,len=propArr.length;++i<len;){var prop=propArr[i];equal(Modernizr.prefixed(prop),gimmePrefix(prop),"results for "+prop+" match the homebaked prefix finder")}for(var i=-1,len=domPropArr.length;++i<len;){var prop=domPropArr[i];ok(!!~Modernizr.prefixed(prop.prop,prop.obj,!1).toString().indexOf(gimmePrefix(prop.prop,prop.obj)),"results for "+prop.prop+" match the homebaked prefix finder")}}),test("Modernizr.prefixed autobind",function(){for(var rAFName,vendors=["ms","moz","webkit","o"],x=0;x<vendors.length&&!rAFName;++x)rAFName=window[vendors[x]+"RequestAnimationFrame"]&&vendors[x]+"RequestAnimationFrame";if(rAFName&&(equal("function",typeof Modernizr.prefixed("requestAnimationFrame",window),"Modernizr.prefixed('requestAnimationFrame', window) returns a function"),equal(rAFName,Modernizr.prefixed("requestAnimationFrame",window,!1),"Modernizr.prefixed('requestAnimationFrame', window, false) returns a string (the prop name)")),document.body.webkitMatchesSelector||document.body.mozMatchesSelector){var fn=Modernizr.prefixed("matchesSelector",HTMLElement.prototype,document.body);equal("function",typeof fn,"Modernizr.prefixed('matchesSelector', HTMLElement.prototype, document.body) returns a function"),equal(!0,fn("body"),"Modernizr.prefixed('matchesSelector', HTMLElement.prototype, document.body) is scoped to the body")}window.webkitNotifications&&equal("object",typeof Modernizr.prefixed("Notifications",window),"Modernizr.prefixed('Notifications') returns an object"),"undefined"!=typeof document.webkitIsFullScreen&&equal("boolean",typeof Modernizr.prefixed("isFullScreen",document),"Modernizr.prefixed('isFullScreen') returns a boolean"),"undefined"!=typeof document.mozFullScreen&&equal("boolean",typeof Modernizr.prefixed("fullScreen",document),"Modernizr.prefixed('fullScreen') returns a boolean"),document.body.style.WebkitAnimation&&(equal("string",typeof Modernizr.prefixed("animation",document.body.style),"Modernizr.prefixed('animation', document.body.style) returns value of that, as a string"),equal(animationStyle.toLowerCase(),Modernizr.prefixed("animation",document.body.style,!1).toLowerCase(),"Modernizr.prefixed('animation', document.body.style, false) returns the (case-normalized) name of the property: webkitanimation")),equal(!1,Modernizr.prefixed("doSomethingAmazing$#$",window),"Modernizr.prefixed('doSomethingAmazing$#$', window) : Gobbledygook with prefixed(str,obj) returns false"),equal(!1,Modernizr.prefixed("doSomethingAmazing$#$",window,document.body),"Modernizr.prefixed('doSomethingAmazing$#$', window) : Gobbledygook with prefixed(str,obj, scope) returns false"),equal(!1,Modernizr.prefixed("doSomethingAmazing$#$",window,!1),"Modernizr.prefixed('doSomethingAmazing$#$', window) : Gobbledygook with prefixed(str,obj, false) returns false")});