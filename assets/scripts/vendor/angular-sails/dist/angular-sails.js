!function(angular,io){"use strict";angular.module("ngSails",["ng"]),angular.module("ngSails").provider("$sails",function(){var provider=this,httpVerbs=["get","post","put","delete"],eventNames=["on","once"];this.url=void 0,this.interceptors=[],this.$get=["$q","$timeout",function($q,$timeout){var socket=io.connect(provider.url),defer=function(){var deferred=$q.defer(),promise=deferred.promise;return promise.success=function(fn){return promise.then(fn),promise},promise.error=function(fn){return promise.then(null,fn),promise},deferred},resolveOrReject=function(deferred,data){data&&angular.isObject(data)&&data.status&&2!==Math.floor(data.status/100)?deferred.reject(data):deferred.resolve(data)},angularify=function(cb,data){$timeout(function(){cb(data)})},promisify=function(methodName){socket["legacy_"+methodName]=socket[methodName],socket[methodName]=function(url,data,cb){var deferred=defer();return void 0===cb&&angular.isFunction(data)&&(cb=data,data=null),deferred.promise.then(cb),socket["legacy_"+methodName](url,data,function(result){resolveOrReject(deferred,result)}),deferred.promise}},wrapEvent=function(eventName){socket["legacy_"+eventName]=socket[eventName],socket[eventName]=function(event,cb){null!==cb&&angular.isFunction(cb)&&socket["legacy_"+eventName](event,function(result){angularify(cb,result)})}};return angular.forEach(httpVerbs,promisify),angular.forEach(eventNames,wrapEvent),socket}]})}(angular,io);