/*! angular-sails-bind - v1.0.2 - 2014-06-20
* https://github.com/diegopamio/angular-sails-bind
* Copyright (c) 2014 Diego Pamio; Licensed MIT */

/*! angular-sails-bind - v0.0.11 - 2014-05-27
 * https://github.com/diegopamio/angular-sails-bind
 * Copyright (c) 2014 Diego Pamio; Licensed MIT */

/*! angular-sails-bind - v0.0.7 - 2014-05-20
 * https://github.com/diegopamio/angular-sails-bind
 * Copyright (c) 2014 Diego Pamio; Licensed MIT */

var app=angular.module("ngSailsBind",[]);app.factory("$sailsBind",["$q","$rootScope",function($q,$rootScope){"use strict";var bind=function(resourceName,$scope,subset){var defer_bind=new $q.defer,requestEnded=_get("/"+resourceName,subset);return requestEnded.then(function(data){$scope[resourceName+"s"]=data,addCollectionWatchersToSubitemsOf(data,$scope,resourceName),defer_bind.resolve()}),io.socket.on(resourceName,function(message){var elements=$scope[resourceName+"s"],actions={created:function(){$scope[resourceName+"s"].push(message.data)},updated:function(){var updatedElement=$scope[resourceName+"s"].find(function(element){return parseInt(message.id,10)===parseInt(element.id,10)});angular.extend(updatedElement,message.data)},destroyed:function(){var deletedElement=$scope[resourceName+"s"].find(function(element){return parseInt(element.id,10)===parseInt(message.id,10)});deletedElement&&elements.splice(elements.indexOf(deletedElement),1)}};actions[message.verb]()}),$scope.$watchCollection(resourceName+"s",function(newValues,oldValues){var addedElements,removedElements;newValues=newValues||[],oldValues=oldValues||[],addedElements=newValues.diff(oldValues),removedElements=oldValues.diff(newValues),removedElements.forEach(function(item){_get("/"+resourceName+"?id="+item.id).then(function(itemIsOnBackend){itemIsOnBackend&&!itemIsOnBackend.error&&io.socket.delete("/"+resourceName+"/destroy/"+item.id)})}),addedElements.forEach(function(item){item.id||io.socket.put("/"+resourceName+"/create/",item,function(data){_get("/"+resourceName+"/"+data.id).then(function(newData){angular.extend(item,newData)})}),addCollectionWatchersToSubitemsOf(addedElements,$scope,resourceName)})}),defer_bind.promise},addCollectionWatchersToSubitemsOf=function(model,scope,resourceName){model.forEach(function(item){scope.$watchCollection(resourceName+"s["+scope[resourceName+"s"].indexOf(item)+"]",function(newValue,oldValue){oldValue&&newValue&&(angular.equals(oldValue,newValue)||parseInt(oldValue.id,10)!==parseInt(newValue.id,10)||oldValue.updatedAt!==newValue.updatedAt||io.socket.post("/"+resourceName+"/update/"+oldValue.id,angular.copy(newValue)))})})},_get=function(url,additional){var defer=new $q.defer;return additional=additional||{},io.socket.request(url,additional,function(res){$rootScope.$apply(defer.resolve(res))}),defer.promise};return{bind:bind}}]),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{enumerable:!1,configurable:!0,writable:!0,value:function(predicate){if(null==this)throw new TypeError("Array.prototype.find called on null or undefined");if("function"!=typeof predicate)throw new TypeError("predicate must be a function");for(var value,list=Object(this),length=list.length>>>0,thisArg=arguments[1],i=0;length>i;i++)if(i in list&&(value=list[i],predicate.call(thisArg,value,i,list)))return value;return void 0}}),Array.prototype.diff||(Array.prototype.diff=function(a){return this.filter(function(i){return a.indexOf(i)<0})});