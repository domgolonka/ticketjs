var io=require("socket.io"),server=io(process.env.ZUUL_PORT),expect=require("expect.js");server.on("connection",function(socket){socket.on("hi",function(){socket.emit("hi")}),socket.on("ack",function(){socket.emit("ack",function(a,b){5==a&&b.test&&socket.emit("got it")})}),socket.on("getAckDate",function(data,cb){cb(new Date)}),socket.on("getDate",function(){socket.emit("takeDate",new Date)}),socket.on("getDateObj",function(){socket.emit("takeDateObj",{date:new Date})}),socket.on("getUtf8",function(){socket.emit("takeUtf8","てすと"),socket.emit("takeUtf8","Я Б Г Д Ж Й"),socket.emit("takeUtf8","Ä ä Ü ü ß"),socket.emit("takeUtf8","utf8 — string"),socket.emit("takeUtf8","utf8 — string")}),socket.on("false",function(){socket.emit("false",!1)}),socket.on("doge",function(){buf=new Buffer("asdfasdf","utf8"),socket.emit("doge",buf)}),socket.on("buffa",function(a){Buffer.isBuffer(a)&&socket.emit("buffack")}),socket.on("jsonbuff",function(a){expect(a.hello).to.eql("lol"),expect(Buffer.isBuffer(a.message)).to.be(!0),expect(a.goodbye).to.eql("gotcha"),socket.emit("jsonbuff-ack")});var receivedAbuff1=!1;socket.on("abuff1",function(a){expect(Buffer.isBuffer(a)).to.be(!0),receivedAbuff1=!0}),socket.on("abuff2",function(){expect(receivedAbuff1).to.be(!0),socket.emit("abuff2-ack")}),socket.on("blob",function(a){Buffer.isBuffer(a)&&socket.emit("back")}),socket.on("jsonblob",function(a){expect(a.hello).to.eql("lol"),expect(Buffer.isBuffer(a.message)).to.be(!0),expect(a.goodbye).to.eql("gotcha"),socket.emit("jsonblob-ack")});var receivedblob1=!1,receivedblob2=!1;socket.on("blob1",function(a){expect(Buffer.isBuffer(a)).to.be(!0),receivedblob1=!0}),socket.on("blob2",function(a){expect(receivedblob1).to.be(!0),expect(a).to.eql("second"),receivedblob2=!0}),socket.on("blob3",function(a){expect(Buffer.isBuffer(a)).to.be(!0),expect(receivedblob1).to.be(!0),expect(receivedblob2).to.be(!0),socket.emit("blob3-ack")}),socket.on("getbin",function(){buf=new Buffer("asdfasdf","utf8"),socket.emit("takebin",buf)})});